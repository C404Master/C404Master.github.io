<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>这是我的第一篇文章</title>
      <link href="/2022/12/25/2022-12-25/"/>
      <url>/2022/12/25/2022-12-25/</url>
      
        <content type="html"><![CDATA[<h2 id="二分查找法（L1-056）"><a href="#二分查找法（L1-056）" class="headerlink" title="二分查找法（L1-056）"></a>二分查找法（L1-056）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//L1-056</span><br><span class="line"> while(lo &lt; hi)&#123;</span><br><span class="line">     mid = (lo+hi)&lt;&lt;1;</span><br><span class="line">     (half &lt; nums[mid]) ? hi = mid: lo = mid+1;</span><br><span class="line"> &#125;</span><br><span class="line"> return --lo;</span><br></pre></td></tr></table></figure><h2 id="优化速度-P1440"><a href="#优化速度-P1440" class="headerlink" title="优化速度(P1440)"></a>优化速度(P1440)</h2><p><strong>如果要多次cin、cout，最好使用c语言的scanf(),printf()函数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">deque&lt;int&gt; q;//单调队列</span><br><span class="line">int a[2000010];</span><br><span class="line">int main() &#123;</span><br><span class="line">    //0.捕捉数据</span><br><span class="line">    int n,m;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">    for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">        scanf(&quot;%lld&quot;,&amp;a[i]);</span><br><span class="line">        //输出，</span><br><span class="line">        // 1.队列为空，输出0</span><br><span class="line">        // 2.队列不为空.输出队首</span><br><span class="line">        if (q.empty())&#123;</span><br><span class="line">            printf(&quot;0\n&quot;);//这里用cout会超时！！！！！</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">             printf(&quot;%d\n&quot;,a[q.front()]);//这里用cout会超时！！！！！</span><br><span class="line">        &#125;</span><br><span class="line">        //插入</span><br><span class="line">        //如果队列队尾插入一个下标temp，比较队尾是否比a[temp]大，如果是，插入队尾，</span><br><span class="line">        //    // 检查temp - 队首，有没有超过m，如果超过m，则队首出列</span><br><span class="line">        if (q.empty())&#123;</span><br><span class="line">            q.push_back(i);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            while (!q.empty()&amp;&amp;a[q.back()] &gt; a[i])&#123;</span><br><span class="line">                q.pop_back();//去尾</span><br><span class="line">            &#125;</span><br><span class="line">            q.push_back(i);</span><br><span class="line">            while (!q.empty()&amp;&amp; i - q.front() &gt;= m)&#123;</span><br><span class="line">                //注意这里m的判别条件，是&gt;=，因为是下标判断</span><br><span class="line">                q.pop_front();//删头</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
